==2504== Memcheck, a memory error detector
==2504== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2504== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2504== Command: ./midday_follower
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x48785E7: wattr_on (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE10: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:80)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x48785E7: wattr_on (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE24: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:81)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x48785E7: wattr_on (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE3B: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:82)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x48720A1: waddnstr (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE65: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:83)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x4878597: wattr_off (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE79: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:85)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x4878597: wattr_off (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE8C: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:86)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Conditional jump or move depends on uninitialised value(s)
==2504==    at 0x4878597: wattr_off (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AEA3: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:87)
==2504==    by 0x10A889: main (main.cpp:39)
==2504== 
==2504== Invalid read of size 8
==2504==    at 0x10A868: _M_data (basic_string.h:195)
==2504==    by 0x10A868: c_str (basic_string.h:2321)
==2504==    by 0x10A868: main (main.cpp:38)
==2504==  Address 0x4e37030 is 0 bytes after a block of size 768 alloc'd
==2504==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2504==    by 0x10BDC3: allocate (new_allocator.h:127)
==2504==    by 0x10BDC3: allocate (alloc_traits.h:464)
==2504==    by 0x10BDC3: _M_allocate (stl_vector.h:346)
==2504==    by 0x10BDC3: void std::vector<Files::Item, std::allocator<Files::Item> >::_M_realloc_insert<Files::Item const&>(__gnu_cxx::__normal_iterator<Files::Item*, std::vector<Files::Item, std::allocator<Files::Item> > >, Files::Item const&) (vector.tcc:440)
==2504==    by 0x10B636: push_back (stl_vector.h:1198)
==2504==    by 0x10B636: Files::readDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (files.cpp:45)
==2504==    by 0x10A7DE: main (main.cpp:32)
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10ADFE: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:80)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10AE11: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:81)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10AE25: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:82)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10AE66: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:85)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10AE7A: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:86)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 4
==2504==    at 0x10AE8D: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:87)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x4e37050 is 32 bytes before a block of size 16 in arena "client"
==2504== 
==2504== Invalid read of size 1
==2504==    at 0x48720A7: waddnstr (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE65: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:83)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  Address 0x100000000 is not stack'd, malloc'd or (recently) free'd
==2504== 
==2504== 
==2504== Process terminating with default action of signal 11 (SIGSEGV)
==2504==  Access not within mapped region at address 0x100000000
==2504==    at 0x48720A7: waddnstr (in /usr/lib/x86_64-linux-gnu/libncurses.so.6.3)
==2504==    by 0x10AE65: Graphics::displayEntry(int const&, int const&, char const*, int const&, unsigned long const&, bool) const (graphics.cpp:83)
==2504==    by 0x10A889: main (main.cpp:39)
==2504==  If you believe this happened as a result of a stack
==2504==  overflow in your program's main thread (unlikely but
==2504==  possible), you can try to increase the size of the
==2504==  main thread stack using the --main-stacksize= flag.
==2504==  The main thread stack size used in this run was 8388608.
==2504== 
==2504== HEAP SUMMARY:
==2504==     in use at exit: 146,492 bytes in 464 blocks
==2504==   total heap usage: 500 allocs, 36 frees, 190,897 bytes allocated
==2504== 
==2504== LEAK SUMMARY:
==2504==    definitely lost: 0 bytes in 0 blocks
==2504==    indirectly lost: 0 bytes in 0 blocks
==2504==      possibly lost: 712 bytes in 9 blocks
==2504==    still reachable: 145,780 bytes in 455 blocks
==2504==         suppressed: 0 bytes in 0 blocks
==2504== Rerun with --leak-check=full to see details of leaked memory
==2504== 
==2504== Use --track-origins=yes to see where uninitialised values come from
==2504== For lists of detected and suppressed errors, rerun with: -s
==2504== ERROR SUMMARY: 71 errors from 15 contexts (suppressed: 0 from 0)
